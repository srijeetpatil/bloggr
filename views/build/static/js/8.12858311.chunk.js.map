{"version":3,"sources":["pages/Signin.tsx"],"names":["styles","container","flexDirection","display","width","margin","infoText","fontSize","color","labelText","marginTop","inputBox","padding","borderRadius","outline","border","createButton","backgroundColor","cursor","googleButton","errorCode","userSelect","height","Signin","useState","email","setEmail","password","setPassword","setErrorCode","loginWithEmailAndPassword","a","login","object","token","data","saveToStore","window","location","href","response","status","style","type","placeholder","className","onChange","e","target","value","onClick"],"mappings":"4KAOMA,EAQF,CACFC,UAAW,CACTC,cAAe,SACfC,QAAS,OACTC,MAAO,MACPC,OAAQ,QAEVC,SAAU,CAAEC,SAAU,OAAQC,MAAO,QACrCC,UAAW,CAAEF,SAAU,OAAQG,UAAW,OAAQF,MAAO,WACzDG,SAAU,CACRC,QAAS,OACTC,aAAc,OACdC,QAAS,OACTC,OAAQ,sBAEVC,aAAc,CACZN,UAAW,OACXE,QAAS,OACTK,gBAAiB,UACjBT,MAAO,QACPM,QAAS,OACTD,aAAc,OACdE,OAAQ,OACRG,OAAQ,WAEVC,aAAc,CACZT,UAAW,SACXE,QAAS,OACTE,QAAS,OACTD,aAAc,OACdE,OAAQ,OACRG,OAAQ,WAEVE,UAAW,CACTf,OAAQ,mBACRG,MAAO,UACPa,WAAY,OACZC,OAAQ,SACRf,SAAU,SA8DCgB,UA1Df,WAAkB,MAEUC,mBAAS,IAFnB,mBAETC,EAFS,KAEFC,EAFE,OAGgBF,mBAAS,IAHzB,mBAGTG,EAHS,KAGCC,EAHD,OAKkBJ,mBAAS,IAL3B,mBAKTJ,EALS,KAKES,EALF,KAQVC,EAAyB,uCAAG,WAAOL,EAAeE,GAAtB,iBAAAI,EAAA,sEAE9BF,EAAa,IAFiB,SAGNG,YAAMP,EAAOE,GAHP,OAG1BM,EAH0B,OAI1BC,EAAQD,EAAOE,KAAKD,MACxBE,YAAY,OAAQF,GAEpBG,OAAOC,SAASC,KAAO,IAPO,kDASJ,MAAtB,KAAEC,SAASC,QACbZ,EAAa,6BAVe,0DAAH,wDAe/B,OACE,8BACE,sBAAKa,MAAO1C,EAAOC,UAAnB,UACE,uBAAOyC,MAAO1C,EAAOM,SAArB,0BACA,oBAAIoC,MAAO,CAAElC,MAAO,WAApB,+BACA,uBAAOkC,MAAO1C,EAAOM,SAArB,yCACA,uBAAOoC,MAAO1C,EAAOS,UAArB,mBACA,uBACEkC,KAAK,QACLD,MAAO1C,EAAOW,SACdiC,YAAY,iBACZC,UAAU,OACVC,SAAU,SAACC,GAAD,OAAOrB,EAASqB,EAAEC,OAAOC,UAErC,uBAAOP,MAAO1C,EAAOS,UAArB,sBACA,uBACEkC,KAAK,WACLD,MAAO1C,EAAOW,SACdkC,UAAU,OACVD,YAAY,gBACZE,SAAU,SAACC,GAAD,OAAOnB,EAAYmB,EAAEC,OAAOC,UAExC,uBAAOP,MAAO1C,EAAOoB,UAArB,SAAiCA,IACjC,wBACEsB,MAAO1C,EAAOgB,aACd6B,UAAU,OACVK,QAAS,kBAAMpB,EAA0BL,EAAOE,IAHlD","file":"static/js/8.12858311.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n/* APIs */\r\nimport { login } from \"../api/auth\";\r\n/* Utils */\r\nimport { saveToStore } from \"../util/localstore\";\r\n\r\n/* Custom styles object */\r\nconst styles: {\r\n  container: React.CSSProperties;\r\n  infoText: React.CSSProperties;\r\n  labelText: React.CSSProperties;\r\n  inputBox: React.CSSProperties;\r\n  createButton: React.CSSProperties;\r\n  googleButton: React.CSSProperties;\r\n  errorCode: React.CSSProperties;\r\n} = {\r\n  container: {\r\n    flexDirection: \"column\",\r\n    display: \"flex\",\r\n    width: \"60%\",\r\n    margin: \"auto\",\r\n  },\r\n  infoText: { fontSize: \"18px\", color: \"grey\" },\r\n  labelText: { fontSize: \"18px\", marginTop: \"2rem\", color: \"#002868\" },\r\n  inputBox: {\r\n    padding: \"1rem\",\r\n    borderRadius: \"10px\",\r\n    outline: \"none\",\r\n    border: \"solid thin #D6D6D6\",\r\n  },\r\n  createButton: {\r\n    marginTop: \"1rem\",\r\n    padding: \"1rem\",\r\n    backgroundColor: \"#0364FF\",\r\n    color: \"white\",\r\n    outline: \"none\",\r\n    borderRadius: \"10px\",\r\n    border: \"none\",\r\n    cursor: \"pointer\",\r\n  },\r\n  googleButton: {\r\n    marginTop: \"0.5rem\",\r\n    padding: \"1rem\",\r\n    outline: \"none\",\r\n    borderRadius: \"10px\",\r\n    border: \"none\",\r\n    cursor: \"pointer\",\r\n  },\r\n  errorCode: {\r\n    margin: \"1rem auto 0 auto\",\r\n    color: \"#FE4747\",\r\n    userSelect: \"none\",\r\n    height: \"1.5rem\",\r\n    fontSize: \"13px\"\r\n  },\r\n};\r\n\r\nfunction Signin() {\r\n  /* Email and password hooks */\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  /* ErrorCode hook */\r\n  const [errorCode, setErrorCode] = useState(\"\");\r\n\r\n  /* Signin method with just email and password */\r\n  const loginWithEmailAndPassword = async (email: string, password: string) => {\r\n    try {\r\n      setErrorCode(\"\");\r\n      let object: any = await login(email, password);\r\n      let token = object.data.token;\r\n      saveToStore(\"auth\", token);\r\n      /* Route back to main page after signin */\r\n      window.location.href = \"/\";\r\n    } catch (e: any) {\r\n      if (e.response.status === 401) {\r\n        setErrorCode(\"Invalid email or password\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={styles.container}>\r\n        <label style={styles.infoText}>Hello User !</label>\r\n        <h1 style={{ color: \"#424242\" }}>Sign in to Bloggr</h1>\r\n        <label style={styles.infoText}>Sign in to create your blog</label>\r\n        <label style={styles.labelText}>Email</label>\r\n        <input\r\n          type=\"email\"\r\n          style={styles.inputBox}\r\n          placeholder=\"name@email.com\"\r\n          className=\"font\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        ></input>\r\n        <label style={styles.labelText}>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          style={styles.inputBox}\r\n          className=\"font\"\r\n          placeholder=\"Your password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        ></input>\r\n        <label style={styles.errorCode}>{errorCode}</label>\r\n        <button\r\n          style={styles.createButton}\r\n          className=\"font\"\r\n          onClick={() => loginWithEmailAndPassword(email, password)}\r\n        >\r\n          Sign in\r\n        </button>        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n"],"sourceRoot":""}