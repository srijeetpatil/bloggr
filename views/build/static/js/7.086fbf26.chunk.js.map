{"version":3,"sources":["components/Tile.tsx","pages/Home.tsx"],"names":["styles","tile","width","height","backgroundColor","borderRadius","boxShadow","marginLeft","marginBottom","display","cursor","textDecoration","Tile","props","style","to","id","padding","color","fontSize","className","title","tiles","flexFlow","container","flexDirection","labelTag","margin","borderBottom","spinnerContainer","alignItems","justifyContent","Home","useState","feedLoading","setFeedLoading","myBlogsLoading","setMyBlogsLoading","useEffect","exploreBlogs","myBlogs","user","CircularProgress","feed","map","blog","k","_id","myBlogsData","length"],"mappings":"qLAGMA,EAAS,CACbC,KAAM,CACJC,MAAO,MACPC,OAAQ,QACRC,gBAAiB,UACjBC,aAAc,MACdC,UAAW,wCACXC,WAAY,KACZC,aAAc,OACdC,QAAS,OACTC,OAAQ,UACRC,eAAgB,SA8BLC,EArBF,SAACC,GACZ,OACE,cAAC,IAAD,CAAMC,MAAOd,EAAOC,KAAMc,GAAE,gBAAWF,EAAMG,IAA7C,SACE,qBACEF,MAAO,CACLG,QAAS,OACTN,eAAgB,OAChBO,MAAO,SAJX,SAOE,uBACEJ,MAAO,CAAEJ,OAAQ,UAAWS,SAAU,QACtCC,UAAU,OAFZ,SAIGP,EAAMQ,a,SCvBXrB,EAKF,CACFsB,MAAO,CACLL,QAAS,SACTR,QAAS,OACTc,SAAU,QAEZC,UAAW,CACTf,QAAS,OACTgB,cAAe,UAEjBC,SAAU,CACRC,OAAQ,OACRV,QAAS,gBACTW,aAAc,mBAEhBC,iBAAkB,CAChBpB,QAAS,OACTP,MAAO,OACP4B,WAAY,SACZC,eAAgB,SAChB5B,OAAQ,UAIG,SAAS6B,EAAKnB,GAAmB,IAAD,EACPoB,oBAAS,GADF,mBACtCC,EADsC,KACzBC,EADyB,OAEDF,oBAAS,GAFR,mBAEtCG,EAFsC,KAEtBC,EAFsB,KAiB7C,OAbAC,qBAAU,WACJJ,IACFrB,EAAM0B,eAENJ,GAAe,IAEbC,IACFvB,EAAM2B,UAENH,GAAkB,MAEnB,CAACH,EAAaE,IAGf,sBAAKtB,MAAOd,EAAOwB,UAAnB,UACE,mCACGX,EAAM4B,KACL,cAAC,IAAD,CACE1B,GAAG,UACHD,MAAO,CACLH,eAAgB,OAChBO,MAAO,UACPC,SAAU,OACVjB,MAAO,cACPe,QAAS,OACTb,gBAAiB,UACjBE,UAAW,2CATf,+BAeA,KAGJ,uBAAOQ,MAAOd,EAAO0B,SAArB,sDAGCQ,EACC,qBAAKpB,MAAOd,EAAO6B,iBAAnB,SACE,cAACa,EAAA,EAAD,MAGF,mCACE,qBAAK5B,MAAOd,EAAOsB,MAAnB,SACGT,EAAM8B,KAAKC,KAAI,SAACC,EAAWC,GAAZ,OACd,cAAC,EAAD,CAAczB,MAAOwB,EAAKxB,MAAOL,GAAI6B,EAAKE,KAA/BD,UAKnB,mCACGjC,EAAM4B,MACL,qCACE,uBAAO3B,MAAOd,EAAO0B,SAArB,wBACCU,EACC,qBAAKtB,MAAOd,EAAO6B,iBAAnB,SACE,cAACa,EAAA,EAAD,MAGF,qBAAK5B,MAAOd,EAAOsB,MAAnB,SACGT,EAAMmC,YAAYC,OAAS,EAC1BpC,EAAMmC,YAAYJ,KAAI,SAACC,EAAWC,GAAZ,OACpB,cAAC,EAAD,CAAczB,MAAOwB,EAAKxB,MAAOL,GAAI6B,EAAKE,KAA/BD,MAGb","file":"static/js/7.086fbf26.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  tile: {\r\n    width: \"24%\",\r\n    height: \"15rem\",\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderRadius: \"1px\",\r\n    boxShadow: \"rgba(149, 157, 165, 0.2) 0px 8px 24px\",\r\n    marginLeft: \"1%\",\r\n    marginBottom: \"1rem\",\r\n    display: \"flex\",\r\n    cursor: \"pointer\",\r\n    textDecoration: \"none\",\r\n  },\r\n};\r\n\r\ninterface TileProps {\r\n  title: string;\r\n  id: string;\r\n}\r\n\r\nconst Tile = (props: TileProps) => {\r\n  return (\r\n    <Link style={styles.tile} to={`/blog/${props.id}`}>\r\n      <div\r\n        style={{\r\n          padding: \"1rem\",\r\n          textDecoration: \"none\",\r\n          color: \"black\",\r\n        }}\r\n      >\r\n        <label\r\n          style={{ cursor: \"pointer\", fontSize: \"25px\" }}\r\n          className=\"font\"\r\n        >\r\n          {props.title}\r\n        </label>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// Components\r\nimport Tile from \"../components/Tile\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\ninterface HomeProps {\r\n  feed: Array<any>;\r\n  user: any;\r\n  exploreBlogs: Function;\r\n  myBlogs: Function;\r\n  myBlogsData: Array<any>;\r\n}\r\n\r\nconst styles: {\r\n  tiles: React.CSSProperties;\r\n  container: React.CSSProperties;\r\n  labelTag: React.CSSProperties;\r\n  spinnerContainer: React.CSSProperties;\r\n} = {\r\n  tiles: {\r\n    padding: \"3rem 0\",\r\n    display: \"flex\",\r\n    flexFlow: \"wrap\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  labelTag: {\r\n    margin: \"auto\",\r\n    padding: \"1rem 0 1rem 0\",\r\n    borderBottom: \"solid thin #ccc\",\r\n  },\r\n  spinnerContainer: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"10rem\",\r\n  },\r\n};\r\n\r\nexport default function Home(props: HomeProps) {\r\n  const [feedLoading, setFeedLoading] = useState(true);\r\n  const [myBlogsLoading, setMyBlogsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (feedLoading) {\r\n      props.exploreBlogs();\r\n      // Loading effect for feed\r\n      setFeedLoading(false);\r\n    }\r\n    if (myBlogsLoading) {\r\n      props.myBlogs();\r\n      // Loading effect for my blogs\r\n      setMyBlogsLoading(false);\r\n    }\r\n  }, [feedLoading, myBlogsLoading]);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <>\r\n        {props.user ? (\r\n          <Link\r\n            to=\"/create\"\r\n            style={{\r\n              textDecoration: \"none\",\r\n              color: \"#000000\",\r\n              fontSize: \"20px\",\r\n              width: \"max-content\",\r\n              padding: \"1rem\",\r\n              backgroundColor: \"#EAEAEA\",\r\n              boxShadow: \"rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px\",\r\n            }}\r\n          >\r\n            Create a new blog\r\n          </Link>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </>\r\n      <label style={styles.labelTag}>\r\n        Explore new ideas, opinions and thoughts\r\n      </label>\r\n      {feedLoading ? (\r\n        <div style={styles.spinnerContainer}>\r\n          <CircularProgress />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div style={styles.tiles}>\r\n            {props.feed.map((blog: any, k: any) => (\r\n              <Tile key={k} title={blog.title} id={blog._id} />\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n      <>\r\n        {props.user && (\r\n          <>\r\n            <label style={styles.labelTag}>Your Blogs</label>\r\n            {myBlogsLoading ? (\r\n              <div style={styles.spinnerContainer}>\r\n                <CircularProgress />\r\n              </div>\r\n            ) : (\r\n              <div style={styles.tiles}>\r\n                {props.myBlogsData.length > 0 ? (\r\n                  props.myBlogsData.map((blog: any, k: any) => (\r\n                    <Tile key={k} title={blog.title} id={blog._id} />\r\n                  ))\r\n                ) : (\r\n                  <label>Wow such empty</label>\r\n                )}\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}